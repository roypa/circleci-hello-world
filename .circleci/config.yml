# This config is a test following the guide found at https://circleci.com/docs/2.0/hello-world/#section=getting-started
#
# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

commands:
  say-hello-using-node:
    description: "console.log using Node.js"
    parameters:
      who:
        type: string
        default: World
    steps:
      - run: node --version
      - run: node -e "console.log('Hello << parameters.who >>')"

jobs:
  build-the-app:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      # Specify service dependencies here if necessary.
      # CircleCI maintains a library of pre-built images documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/ruby:2.4.1

    working_directory: ~/repo

    steps:
      - checkout
      - say-hello-using-node:
          who: Roy from inside config.yml
      - say-hello-using-node:
          who: \"$ROYS_FULL_NAME\" found in context # defined in context "Roys Context"
      # - run: ruby --version

      # cache can be restored between runs, while persist_to_workspace/attach_workspace is transfer of state between jobs in the same run
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Testing workspace
      - run: mkdir -p roys_workspace
      - run: echo "Trying out workspaces" > ./roys_workspace/echo-output.txt
      - run: echo "Trying out $CIRCLE_PROJECT_REPONAME" > ./roys_workspace/$CIRCLE_PROJECT_REPONAME.txt
      - run: ls -l ./roys_workspace/
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: roys_workspace
          # Must be relative path from root
          paths:
            - echo-output.txt
            # Does not work to use ENV variables in paths
            #- $CIRCLE_PROJECT_REPONAME.txt
            # But globbing works (see https://circleci.com/docs/2.0/configuration-reference/#persist_to_workspace)
            - ./*.txt

  do-stuff-if:
    docker:
      - image: circleci/node:10
    parameters:
      should-run:
        type: boolean
        default: true
    steps:
      when:
        condition: << parameters.should-run >>
        steps:
          - run: cat ./roys_workspace/echo-output.txt
          - run: cat ./roys_workspace/$CIRCLE_PROJECT_REPONAME.txt


  test-the-app:
    docker:
      - image: circleci/node:10

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - say-hello-using-node
      - run: yarn test

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: roys_workspace

      - run: ls -l ./roys_workspace/
      - run:
          name: Check that the expected files exists
          command: |
            test -f ./roys_workspace/echo-output.txt
            test -f ./roys_workspace/$CIRCLE_PROJECT_REPONAME.txt
      - run: |
          if [[ $(cat roys_workspace/echo-output.txt) == "Trying out workspaces" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi

workflows:
  version: 2
  buid-and-test:
    jobs:
      - build-the-app:
          # The job will use the variables set in the context named "Roys Context"
          # Defined at https://circleci.com/gh/organizations/roypa/settings#contexts
          context: Roys Context
      - do-stuff-if:
          should-run: true
          requires:
            - build-the-app
      - test-the-app:
          requires:
            - do-stuff-if
